#Property 测试
com.tupurp.name=张抚州
com.tupurp.sex=男

#日志
logging.file.path=e:/log
logging.file.name=learn-springboot.log
logging.level.com.tupurp.learn.springboot=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

#数据库
#pringBoot在你没有指定MySQL驱动版本的情况下它自动依赖的驱动是8.0.12很高的版本
#如果安装mysql的时候时区设置的不正确 mysql默认的是美国的时区，则报错
#java.sql.SQLException: The server time zone value '?й???????' is unrecognized or represents more than one time zone.
# You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property)
# to use a more specifc time zone value if you want to utilize time zone support.
#启动时由于数据库和系统时区差异所造成的，在jdbc连接的url后面加上serverTimezone=GMT即可解决问题
# 如果需要使用gmt+8时区，需要写成GMT%2B8，否则会被解析为空
# 再一个解决办法就是使用低版本的MySQL jdbc驱动，5.1.28不会存在时区的问题

spring.datasource.url=jdbc:mysql://localhost:3306/tupurp?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=pass!0ve
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#create： 每次加载 hibernate 时都会删除上一次的生成的表，然后根据你的 model 类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop ：每次加载 hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭,表就自动删除。
#update：最常用的属性，第一次加载 hibernate 时根据 model 类会自动建立起表的结构（前提是先建立好数据库），以后加载 hibernate 时根据 model 类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
#validate ：每次加载 hibernate 时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#主要是指定生成表名的存储引擎为 InnoDBD
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#是否打印出自动生成的 SQL，方便调试的时候查看
spring.jpa.show-sql= true


# thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false